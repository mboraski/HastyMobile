// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardNumberInputField renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
        Array [
            Object {},
            undefined,
          ]
    }
>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Array [
                Object {
                  "fontSize": 13,
                  "paddingBottom": 12.8,
                  "paddingHorizontal": 25,
                  "paddingTop": 30.4,
                },
                undefined,
              ]
        }
    />
    <View
        style={
            Object {
                "backgroundColor": "#F4F4F4",
                "borderRadius": 7,
                "marginHorizontal": 15,
              }
        }
    >
        <Field
            component={[Function]}
            style={
                Array [
                    Object {
                      "fontSize": 16,
                      "height": 50,
                      "paddingHorizontal": 20,
                    },
                    undefined,
                  ]
            }
        />
    </View>
</View>,
  "nodes": Array [
    <View
      style={
            Array [
                  Object {},
                  undefined,
                ]
      }
>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Array [
                        Object {
                          "fontSize": 13,
                          "paddingBottom": 12.8,
                          "paddingHorizontal": 25,
                          "paddingTop": 30.4,
                        },
                        undefined,
                      ]
            }
      />
      <View
            style={
                  Object {
                        "backgroundColor": "#F4F4F4",
                        "borderRadius": 7,
                        "marginHorizontal": 15,
                      }
            }
      >
            <Field
                  component={[Function]}
                  style={
                        Array [
                              Object {
                                "fontSize": 16,
                                "height": 50,
                                "paddingHorizontal": 20,
                              },
                              undefined,
                            ]
                  }
            />
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <TextInputField />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={
                    Array [
                              Object {},
                              undefined,
                            ]
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 13,
                                          "paddingBottom": 12.8,
                                          "paddingHorizontal": 25,
                                          "paddingTop": 30.4,
                                        },
                                        undefined,
                                      ]
                    }
          />
          <View
                    style={
                              Object {
                                        "backgroundColor": "#F4F4F4",
                                        "borderRadius": 7,
                                        "marginHorizontal": 15,
                                      }
                    }
          >
                    <Field
                              component={[Function]}
                              style={
                                        Array [
                                                  Object {
                                                    "fontSize": 16,
                                                    "height": 50,
                                                    "paddingHorizontal": 20,
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </View>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          style={
                    Array [
                              Object {},
                              undefined,
                            ]
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Array [
                                        Object {
                                          "fontSize": 13,
                                          "paddingBottom": 12.8,
                                          "paddingHorizontal": 25,
                                          "paddingTop": 30.4,
                                        },
                                        undefined,
                                      ]
                    }
          />
          <View
                    style={
                              Object {
                                        "backgroundColor": "#F4F4F4",
                                        "borderRadius": 7,
                                        "marginHorizontal": 15,
                                      }
                    }
          >
                    <Field
                              component={[Function]}
                              style={
                                        Array [
                                                  Object {
                                                    "fontSize": 16,
                                                    "height": 50,
                                                    "paddingHorizontal": 20,
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <TextInputField />,
}
`;
