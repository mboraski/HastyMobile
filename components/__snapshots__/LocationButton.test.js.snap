// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationButton renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Icon
    color="black"
    containerStyle={
        Object {
            "backgroundColor": "#F4F4F4",
            "marginRight": 12,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 1,
          }
    }
    iconStyle={
        Object {
            "color": "#4c4c4c",
            "transform": Array [
              Object {
                "rotate": "45deg",
              },
            ],
          }
    }
    name="navigation"
    onPress={[Function]}
    raised={true}
    reverse={false}
    reverseColor="white"
    size={25}
    underlayColor="white"
/>,
  "nodes": Array [
    <Icon
      color="black"
      containerStyle={
            Object {
                  "backgroundColor": "#F4F4F4",
                  "marginRight": 12,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 1,
                }
      }
      iconStyle={
            Object {
                  "color": "#4c4c4c",
                  "transform": Array [
                    Object {
                      "rotate": "45deg",
                    },
                  ],
                }
      }
      name="navigation"
      onPress={[Function]}
      raised={true}
      reverse={false}
      reverseColor="white"
      size={25}
      underlayColor="white"
/>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "_currentElement": <LocationButton />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": LocationButton {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "onPress": [Function],
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Icon
          color="black"
          containerStyle={
                    Object {
                              "backgroundColor": "#F4F4F4",
                              "marginRight": 12,
                              "shadowColor": "#000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.3,
                              "shadowRadius": 1,
                            }
          }
          iconStyle={
                    Object {
                              "color": "#4c4c4c",
                              "transform": Array [
                                Object {
                                  "rotate": "45deg",
                                },
                              ],
                            }
          }
          name="navigation"
          onPress={[Function]}
          raised={true}
          reverse={false}
          reverseColor="white"
          size={25}
          underlayColor="white"
/>,
        "_debugID": 4,
        "_renderedOutput": <Icon
          color="black"
          containerStyle={
                    Object {
                              "backgroundColor": "#F4F4F4",
                              "marginRight": 12,
                              "shadowColor": "#000",
                              "shadowOffset": Object {
                                "height": 2,
                                "width": 0,
                              },
                              "shadowOpacity": 0.3,
                              "shadowRadius": 1,
                            }
          }
          iconStyle={
                    Object {
                              "color": "#4c4c4c",
                              "transform": Array [
                                Object {
                                  "rotate": "45deg",
                                },
                              ],
                            }
          }
          name="navigation"
          onPress={[Function]}
          raised={true}
          reverse={false}
          reverseColor="white"
          size={25}
          underlayColor="white"
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <LocationButton />,
}
`;
