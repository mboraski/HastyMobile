// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeedbackScreen renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
        Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "flex": 1,
            "flexDirection": "column",
            "paddingTop": 32,
          }
    }
>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Object {
                "fontSize": 16,
                "marginBottom": 16,
              }
        }
    >
        How was 
        Jessica
        ?
    </Text>
    <BackButton
        emptyImage={1}
        fillImage={1}
        onChange={[Function]}
        ratingCount={5}
        size={30}
        style={
            Object {
                "marginBottom": 64,
              }
        }
        value={0}
    />
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Object {
                "fontSize": 16,
                "marginBottom": 16,
              }
        }
    >
        How was your product?
    </Text>
    <BackButton
        emptyImage={1}
        fillImage={1}
        onChange={[Function]}
        ratingCount={5}
        size={30}
        style={
            Object {
                "marginBottom": 64,
              }
        }
        value={0}
    />
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Object {
                "fontSize": 16,
                "marginBottom": 16,
              }
        }
    >
        How was your experience overall?
    </Text>
    <BackButton
        emptyImage={1}
        fillImage={1}
        onChange={[Function]}
        ratingCount={5}
        size={30}
        style={
            Object {
                "marginBottom": 64,
              }
        }
        value={0}
    />
</View>,
  "nodes": Array [
    <View
      style={
            Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "flex": 1,
                  "flexDirection": "column",
                  "paddingTop": 32,
                }
      }
>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Object {
                        "fontSize": 16,
                        "marginBottom": 16,
                      }
            }
      >
            How was 
            Jessica
            ?
      </Text>
      <BackButton
            emptyImage={1}
            fillImage={1}
            onChange={[Function]}
            ratingCount={5}
            size={30}
            style={
                  Object {
                        "marginBottom": 64,
                      }
            }
            value={0}
      />
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Object {
                        "fontSize": 16,
                        "marginBottom": 16,
                      }
            }
      >
            How was your product?
      </Text>
      <BackButton
            emptyImage={1}
            fillImage={1}
            onChange={[Function]}
            ratingCount={5}
            size={30}
            style={
                  Object {
                        "marginBottom": 64,
                      }
            }
            value={0}
      />
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Object {
                        "fontSize": 16,
                        "marginBottom": 16,
                      }
            }
      >
            How was your experience overall?
      </Text>
      <BackButton
            emptyImage={1}
            fillImage={1}
            onChange={[Function]}
            ratingCount={5}
            size={30}
            style={
                  Object {
                        "marginBottom": 64,
                      }
            }
            value={0}
      />
</View>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "_currentElement": <FeedbackScreen
        name="Jessica"
        numProducts={1}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": FeedbackScreen {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleOverallRating": [Function],
        "handleProductRating": [Function],
        "handleUserRating": [Function],
        "props": Object {
          "name": "Jessica",
          "numProducts": 1,
        },
        "refs": Object {},
        "state": Object {
          "overallRating": 0,
          "productRating": 0,
          "userRating": 0,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={
                    Object {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "flex": 1,
                              "flexDirection": "column",
                              "paddingTop": 32,
                            }
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was 
                    Jessica
                    ?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was your product?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was your experience overall?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
</View>,
        "_debugID": 4,
        "_renderedOutput": <View
          style={
                    Object {
                              "alignItems": "center",
                              "backgroundColor": "#ffffff",
                              "flex": 1,
                              "flexDirection": "column",
                              "paddingTop": 32,
                            }
          }
>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was 
                    Jessica
                    ?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was your product?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 16,
                                        "marginBottom": 16,
                                      }
                    }
          >
                    How was your experience overall?
          </Text>
          <BackButton
                    emptyImage={1}
                    fillImage={1}
                    onChange={[Function]}
                    ratingCount={5}
                    size={30}
                    style={
                              Object {
                                        "marginBottom": 64,
                                      }
                    }
                    value={0}
          />
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <FeedbackScreen
    name="Jessica"
    numProducts={1}
/>,
}
`;
