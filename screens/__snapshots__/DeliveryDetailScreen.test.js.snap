// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeliveryDetailScreen renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Form(InformationSummary)
    anyTouched={false}
    array={
        Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "removeAll": [Function],
            "shift": [Function],
            "splice": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
    }
    arrayInsert={[Function]}
    arrayMove={[Function]}
    arrayPop={[Function]}
    arrayPush={[Function]}
    arrayRemove={[Function]}
    arrayRemoveAll={[Function]}
    arrayShift={[Function]}
    arraySplice={[Function]}
    arraySwap={[Function]}
    arrayUnshift={[Function]}
    asyncErrors={undefined}
    asyncValidating={false}
    autofill={[Function]}
    blur={[Function]}
    change={[Function]}
    clearAsyncError={[Function]}
    clearSubmit={[Function]}
    clearSubmitErrors={[Function]}
    destroy={[Function]}
    destroyOnUnmount={true}
    dirty={false}
    dispatch={[Function]}
    enableReinitialize={false}
    error={undefined}
    focus={[Function]}
    forceUnregisterOnUnmount={false}
    form="deliveryDetail"
    getFormState={[Function]}
    initialValues={undefined}
    initialize={[Function]}
    initialized={false}
    invalid={false}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pristine={true}
    pure={true}
    registerField={[Function]}
    registeredFields={undefined}
    reset={[Function]}
    setSubmitFailed={[Function]}
    setSubmitSucceeded={[Function]}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    startAsyncValidation={[Function]}
    startSubmit={[Function]}
    stopAsyncValidation={[Function]}
    stopSubmit={[Function]}
    submit={[Function]}
    submitFailed={false}
    submitSucceeded={false}
    submitting={false}
    syncErrors={Object {}}
    syncWarnings={Object {}}
    touch={[Function]}
    touchOnBlur={true}
    touchOnChange={false}
    triggerSubmit={undefined}
    unregisterField={[Function]}
    untouch={[Function]}
    updateSyncErrors={[Function]}
    updateSyncWarnings={[Function]}
    valid={true}
    validExceptSubmit={true}
    values={Object {}}
    warning={undefined}
/>,
  "nodes": Array [
    <Form(InformationSummary)
      anyTouched={false}
      array={
            Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "removeAll": [Function],
                  "shift": [Function],
                  "splice": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                }
      }
      arrayInsert={[Function]}
      arrayMove={[Function]}
      arrayPop={[Function]}
      arrayPush={[Function]}
      arrayRemove={[Function]}
      arrayRemoveAll={[Function]}
      arrayShift={[Function]}
      arraySplice={[Function]}
      arraySwap={[Function]}
      arrayUnshift={[Function]}
      asyncErrors={undefined}
      asyncValidating={false}
      autofill={[Function]}
      blur={[Function]}
      change={[Function]}
      clearAsyncError={[Function]}
      clearSubmit={[Function]}
      clearSubmitErrors={[Function]}
      destroy={[Function]}
      destroyOnUnmount={true}
      dirty={false}
      dispatch={[Function]}
      enableReinitialize={false}
      error={undefined}
      focus={[Function]}
      forceUnregisterOnUnmount={false}
      form="deliveryDetail"
      getFormState={[Function]}
      initialValues={undefined}
      initialize={[Function]}
      initialized={false}
      invalid={false}
      keepDirtyOnReinitialize={false}
      persistentSubmitErrors={false}
      pristine={true}
      pure={true}
      registerField={[Function]}
      registeredFields={undefined}
      reset={[Function]}
      setSubmitFailed={[Function]}
      setSubmitSucceeded={[Function]}
      shouldAsyncValidate={[Function]}
      shouldValidate={[Function]}
      startAsyncValidation={[Function]}
      startSubmit={[Function]}
      stopAsyncValidation={[Function]}
      stopSubmit={[Function]}
      submit={[Function]}
      submitFailed={false}
      submitSucceeded={false}
      submitting={false}
      syncErrors={Object {}}
      syncWarnings={Object {}}
      touch={[Function]}
      touchOnBlur={true}
      touchOnChange={false}
      triggerSubmit={undefined}
      unregisterField={[Function]}
      untouch={[Function]}
      updateSyncErrors={[Function]}
      updateSyncWarnings={[Function]}
      valid={true}
      validExceptSubmit={true}
      values={Object {}}
      warning={undefined}
/>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "_currentElement": <Connect(Form(InformationSummary))
        destroyOnUnmount={true}
        enableReinitialize={false}
        forceUnregisterOnUnmount={false}
        form="deliveryDetail"
        getFormState={[Function]}
        initialValues={undefined}
        keepDirtyOnReinitialize={false}
        persistentSubmitErrors={false}
        pure={true}
        shouldAsyncValidate={[Function]}
        shouldValidate={[Function]}
        touchOnBlur={true}
        touchOnChange={false}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Connect {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": undefined,
        },
        "notifyNestedSubs": [Function],
        "props": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": false,
          "forceUnregisterOnUnmount": false,
          "form": "deliveryDetail",
          "getFormState": [Function],
          "initialValues": undefined,
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldValidate": [Function],
          "touchOnBlur": true,
          "touchOnChange": false,
        },
        "propsMode": false,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "anyTouched": false,
            "array": Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "removeAll": [Function],
              "shift": [Function],
              "splice": [Function],
              "swap": [Function],
              "unshift": [Function],
            },
            "arrayInsert": [Function],
            "arrayMove": [Function],
            "arrayPop": [Function],
            "arrayPush": [Function],
            "arrayRemove": [Function],
            "arrayRemoveAll": [Function],
            "arrayShift": [Function],
            "arraySplice": [Function],
            "arraySwap": [Function],
            "arrayUnshift": [Function],
            "asyncErrors": undefined,
            "asyncValidating": false,
            "autofill": [Function],
            "blur": [Function],
            "change": [Function],
            "clearAsyncError": [Function],
            "clearSubmit": [Function],
            "clearSubmitErrors": [Function],
            "destroy": [Function],
            "destroyOnUnmount": true,
            "dirty": false,
            "dispatch": [Function],
            "enableReinitialize": false,
            "error": undefined,
            "focus": [Function],
            "forceUnregisterOnUnmount": false,
            "form": "deliveryDetail",
            "getFormState": [Function],
            "initialValues": undefined,
            "initialize": [Function],
            "initialized": false,
            "invalid": false,
            "keepDirtyOnReinitialize": false,
            "persistentSubmitErrors": false,
            "pristine": true,
            "pure": true,
            "registerField": [Function],
            "registeredFields": undefined,
            "reset": [Function],
            "setSubmitFailed": [Function],
            "setSubmitSucceeded": [Function],
            "shouldAsyncValidate": [Function],
            "shouldValidate": [Function],
            "startAsyncValidation": [Function],
            "startSubmit": [Function],
            "stopAsyncValidation": [Function],
            "stopSubmit": [Function],
            "submit": [Function],
            "submitFailed": false,
            "submitSucceeded": false,
            "submitting": false,
            "syncErrors": Object {},
            "syncWarnings": Object {},
            "touch": [Function],
            "touchOnBlur": true,
            "touchOnChange": false,
            "triggerSubmit": undefined,
            "unregisterField": [Function],
            "untouch": [Function],
            "updateSyncErrors": [Function],
            "updateSyncWarnings": [Function],
            "valid": true,
            "validExceptSubmit": true,
            "values": Object {},
            "warning": undefined,
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "subscription": Subscription {
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
        "version": 4,
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Form(InformationSummary)
          anyTouched={false}
          array={
                    Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            }
          }
          arrayInsert={[Function]}
          arrayMove={[Function]}
          arrayPop={[Function]}
          arrayPush={[Function]}
          arrayRemove={[Function]}
          arrayRemoveAll={[Function]}
          arrayShift={[Function]}
          arraySplice={[Function]}
          arraySwap={[Function]}
          arrayUnshift={[Function]}
          asyncErrors={undefined}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          destroyOnUnmount={true}
          dirty={false}
          dispatch={[Function]}
          enableReinitialize={false}
          error={undefined}
          focus={[Function]}
          forceUnregisterOnUnmount={false}
          form="deliveryDetail"
          getFormState={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pristine={true}
          pure={true}
          registerField={[Function]}
          registeredFields={undefined}
          reset={[Function]}
          setSubmitFailed={[Function]}
          setSubmitSucceeded={[Function]}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          startAsyncValidation={[Function]}
          startSubmit={[Function]}
          stopAsyncValidation={[Function]}
          stopSubmit={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          syncErrors={Object {}}
          syncWarnings={Object {}}
          touch={[Function]}
          touchOnBlur={true}
          touchOnChange={false}
          triggerSubmit={undefined}
          unregisterField={[Function]}
          untouch={[Function]}
          updateSyncErrors={[Function]}
          updateSyncWarnings={[Function]}
          valid={true}
          validExceptSubmit={true}
          values={Object {}}
          warning={undefined}
/>,
        "_debugID": 4,
        "_renderedOutput": <Form(InformationSummary)
          anyTouched={false}
          array={
                    Object {
                              "insert": [Function],
                              "move": [Function],
                              "pop": [Function],
                              "push": [Function],
                              "remove": [Function],
                              "removeAll": [Function],
                              "shift": [Function],
                              "splice": [Function],
                              "swap": [Function],
                              "unshift": [Function],
                            }
          }
          arrayInsert={[Function]}
          arrayMove={[Function]}
          arrayPop={[Function]}
          arrayPush={[Function]}
          arrayRemove={[Function]}
          arrayRemoveAll={[Function]}
          arrayShift={[Function]}
          arraySplice={[Function]}
          arraySwap={[Function]}
          arrayUnshift={[Function]}
          asyncErrors={undefined}
          asyncValidating={false}
          autofill={[Function]}
          blur={[Function]}
          change={[Function]}
          clearAsyncError={[Function]}
          clearSubmit={[Function]}
          clearSubmitErrors={[Function]}
          destroy={[Function]}
          destroyOnUnmount={true}
          dirty={false}
          dispatch={[Function]}
          enableReinitialize={false}
          error={undefined}
          focus={[Function]}
          forceUnregisterOnUnmount={false}
          form="deliveryDetail"
          getFormState={[Function]}
          initialValues={undefined}
          initialize={[Function]}
          initialized={false}
          invalid={false}
          keepDirtyOnReinitialize={false}
          persistentSubmitErrors={false}
          pristine={true}
          pure={true}
          registerField={[Function]}
          registeredFields={undefined}
          reset={[Function]}
          setSubmitFailed={[Function]}
          setSubmitSucceeded={[Function]}
          shouldAsyncValidate={[Function]}
          shouldValidate={[Function]}
          startAsyncValidation={[Function]}
          startSubmit={[Function]}
          stopAsyncValidation={[Function]}
          stopSubmit={[Function]}
          submit={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          syncErrors={Object {}}
          syncWarnings={Object {}}
          touch={[Function]}
          touchOnBlur={true}
          touchOnChange={false}
          triggerSubmit={undefined}
          unregisterField={[Function]}
          untouch={[Function]}
          updateSyncErrors={[Function]}
          updateSyncWarnings={[Function]}
          valid={true}
          validExceptSubmit={true}
          values={Object {}}
          warning={undefined}
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Connect(Form(InformationSummary))
    destroyOnUnmount={true}
    enableReinitialize={false}
    forceUnregisterOnUnmount={false}
    form="deliveryDetail"
    getFormState={[Function]}
    initialValues={undefined}
    keepDirtyOnReinitialize={false}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldValidate={[Function]}
    touchOnBlur={true}
    touchOnChange={false}
/>,
}
`;
