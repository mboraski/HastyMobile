// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
        Array [
            Object {
              "backgroundColor": "#f2f2f2",
              "borderRadius": 50,
              "flexDirection": "row",
              "paddingHorizontal": 20,
              "paddingVertical": 10,
              "width": "100%",
            },
          ]
    }
>
    <TextInput
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        style={
            Object {
                "flex": 1,
                "height": 24,
                "textAlign": "center",
              }
        }
        underlineColorAndroid="transparent"
        value=""
    />
    <TouchableOpacity
        activeOpacity={0.2}
        focusedOpacity={0.7}
        onPress={[Function]}
        style={
            Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
              ]
        }
    >
        <Image
            source={1}
            style={
                Object {
                    "height": 24,
                    "width": 24,
                  }
            }
        />
    </TouchableOpacity>
</View>,
  "nodes": Array [
    <View
      style={
            Array [
                  Object {
                    "backgroundColor": "#f2f2f2",
                    "borderRadius": 50,
                    "flexDirection": "row",
                    "paddingHorizontal": 20,
                    "paddingVertical": 10,
                    "width": "100%",
                  },
                ]
      }
>
      <TextInput
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            style={
                  Object {
                        "flex": 1,
                        "height": 24,
                        "textAlign": "center",
                      }
            }
            underlineColorAndroid="transparent"
            value=""
      />
      <TouchableOpacity
            activeOpacity={0.2}
            focusedOpacity={0.7}
            onPress={[Function]}
            style={
                  Array [
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                      ]
            }
      >
            <Image
                  source={1}
                  style={
                        Object {
                              "height": 24,
                              "width": 24,
                            }
                  }
            />
      </TouchableOpacity>
</View>,
  ],
  "options": Object {
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
      },
      "_currentElement": <SearchBar />,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SearchBar {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "focusInput": [Function],
        "handleBlur": [Function],
        "handleFocus": [Function],
        "handleValue": [Function],
        "onPress": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "focused": false,
          "value": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={
                    Array [
                              Object {
                                "backgroundColor": "#f2f2f2",
                                "borderRadius": 50,
                                "flexDirection": "row",
                                "paddingHorizontal": 20,
                                "paddingVertical": 10,
                                "width": "100%",
                              },
                            ]
          }
>
          <TextInput
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    style={
                              Object {
                                        "flex": 1,
                                        "height": 24,
                                        "textAlign": "center",
                                      }
                    }
                    underlineColorAndroid="transparent"
                    value=""
          />
          <TouchableOpacity
                    activeOpacity={0.2}
                    focusedOpacity={0.7}
                    onPress={[Function]}
                    style={
                              Array [
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                        Object {
                                          "alignItems": "center",
                                          "justifyContent": "center",
                                        },
                                      ]
                    }
          >
                    <Image
                              source={1}
                              style={
                                        Object {
                                                  "height": 24,
                                                  "width": 24,
                                                }
                              }
                    />
          </TouchableOpacity>
</View>,
        "_debugID": 4,
        "_renderedOutput": <View
          style={
                    Array [
                              Object {
                                "backgroundColor": "#f2f2f2",
                                "borderRadius": 50,
                                "flexDirection": "row",
                                "paddingHorizontal": 20,
                                "paddingVertical": 10,
                                "width": "100%",
                              },
                            ]
          }
>
          <TextInput
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    style={
                              Object {
                                        "flex": 1,
                                        "height": 24,
                                        "textAlign": "center",
                                      }
                    }
                    underlineColorAndroid="transparent"
                    value=""
          />
          <TouchableOpacity
                    activeOpacity={0.2}
                    focusedOpacity={0.7}
                    onPress={[Function]}
                    style={
                              Array [
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        },
                                        Object {
                                          "alignItems": "center",
                                          "justifyContent": "center",
                                        },
                                      ]
                    }
          >
                    <Image
                              source={1}
                              style={
                                        Object {
                                                  "height": 24,
                                                  "width": 24,
                                                }
                              }
                    />
          </TouchableOpacity>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SearchBar />,
}
`;
